DROP DATABASE IF EXISTS asacademy;
CREATE DATABASE asacademy;
USE asacademy;

CREATE TABLE members(
	member_id INT AUTO_INCREMENT PRIMARY KEY,
	username VARCHAR(40) NOT NULL UNIQUE,
	password VARCHAR(100) NOT NULL,
	user_type ENUM ('parent', 'student', 'teacher', 'admin')
);

CREATE TABLE profiles(
	member_id INT NOT NULL,
	first_name VARCHAR(40),
	last_name VARCHAR(40),
	phone_number INT(11),
	email_id VARCHAR(40),
	address VARCHAR(100),
	DOB TIMESTAMP,
	FOREIGN KEY (member_id) REFERENCES members(member_id)
);

CREATE TABLE admins(
	admin_id INT AUTO_INCREMENT PRIMARY KEY,
	FOREIGN KEY (admin_id) REFERENCES members(member_id)
);

CREATE TABLE teachers(
	teacher_id INT AUTO_INCREMENT PRIMARY KEY,
	FOREIGN KEY (teacher_id) REFERENCES members(member_id)
);

CREATE TABLE parents(
	parent_id INT AUTO_INCREMENT PRIMARY KEY,
	FOREIGN KEY (parent_id) REFERENCES members(member_id)
);

CREATE TABLE students(
	student_id INT AUTO_INCREMENT PRIMARY KEY,
	FOREIGN KEY (student_id) REFERENCES members(member_id)
);

CREATE TABLE subjects(
	subject_id INT AUTO_INCREMENT PRIMARY KEY,
	subject_name VARCHAR(40) NOT NULL
);

CREATE TABLE plans(
	plan_id INT AUTO_INCREMENT PRIMARY KEY,
	plan_name VARCHAR(100) NOT NULL,
	plan_price INT NOT NULL DEFAULT 0,
	plan_starts_at TIMESTAMP NOT NULL,
	plan_ends_at TIMESTAMP,
);

CREATE TABLE courses(
	course_id INT AUTO_INCREMENT PRIMARY KEY,
	subject_id INT NOT NULL,
	plan_id INT,
	course_code VARCHAR(10) NOT NULL UNIQUE,
	course_name VARCHAR(100) NOT NULL UNIQUE,
	course_starts_at TIMESTAMP NOT NULL,
	course_ends_at TIMESTAMP,
	course_price INT NOT NULL DEFAULT 0,
	FOREIGN KEY (subject_id) REFERENCES subjects(subject_id),
	FOREIGN KEY (plan_id) REFERENCES plans(plan_id)
);

CREATE TABLE teaches(
	teacher_id INT NOT NULL,
	course_id INT NOT NULL,
	FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id),
	FOREIGN KEY (course_id) REFERENCES courses(course_id)
);

CREATE TABLE enrollments(
	enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
	student_id INT NOT NULL,
	plan_id INT NOT NULL,
	FOREIGN KEY (student_id) REFERENCES students(student_id)
	FOREIGN KEY (plan_id) REFERENCES plans(plan_id)
);

CREATE TABLE takes(
	student_id INT NOT NULL,
	course_id INT NOT NULL,
	FOREIGN KEY (student_id) REFERENCES students(student_id),
	FOREIGN KEY (course_id) REFERENCES courses(course_id)
);

CREATE TABLE lessons(
	lesson_id INT AUTO_INCREMENT PRIMARY KEY,
	course_id INT NOT NULL,
	lesson_taken_by INT NOT NULL,
	lesson_link VARCHAR(255) NOT NULL,
	lesson_starts_at TIMESTAMP NOT NULL,
	lesson_ends_at TIMESTAMP NOT NULL,
	FOREIGN KEY (course_id) REFERENCES courses(course_id),
	FOREIGN KEY (lesson_taken_by) REFERENCES teachers(teacher_id)
);